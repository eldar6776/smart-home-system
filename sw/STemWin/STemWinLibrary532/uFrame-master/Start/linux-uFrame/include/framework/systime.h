/******************************************************************************
	项目名称	：SGE800计量智能终端业务平台
	文件		：systime.h
	描述		：本文件定义了系统时间模块接口
	版本		：0.1
	作者		：万鸿俊
	创建日期	：2010.11
******************************************************************************/

#ifndef _SYSTIME_H
#define _SYSTIME_H

#include "base.h"
#include "sge_core/rtc.h"

/*************************************************
  宏定义
*************************************************/
//注册周期性定时消息时所用的类型
#define SYSTIME_REGISTER_PERIOD_SEC 	1
#define SYSTIME_REGISTER_PERIOD_MIN 	2
#define SYSTIME_REGISTER_PERIOD_HOUR 	3
#define SYSTIME_REGISTER_PERIOD_DAY 	4
#define SYSTIME_REGISTER_PERIOD_MON 	5
#define SYSTIME_REGISTER_PERIOD_YEAR 	6

/*************************************************
  结构类型定义
*************************************************/

//年月日时分秒
typedef struct {
	u8 year;	//年：[0 - 255]自从2000年以来的年
	u8 mon;		//月：[1 - 12]
	u8 day;		//日：[1 - 31]
	u8 hour;	//时：[0 - 23]
	u8 min;		//分：[0 - 59]
	u8 sec;		//秒：[0 - 59]
} st_ymdhms_t;

//年月日时分
typedef struct {
	u8 year;	//年：[0 - 255]自从2000年以来的年
	u8 mon;		//月：[1 - 12]
	u8 day;		//日：[1 - 31]
	u8 hour;	//时：[0 - 23]
	u8 min;		//分：[0 - 59]
} st_ymdhm_t;

//年月日时
typedef struct {
	u8 year;	//年：[0 - 255]自从2000年以来的年
	u8 mon;		//月：[1 - 12]
	u8 day;		//日：[1 - 31]
	u8 hour;	//时：[0 - 23]
} st_ymdh_t;

//年月日
typedef struct {
	u8 year;	//年：[0 - 255]自从2000年以来的年
	u8 mon;		//月：[1 - 12]
	u8 day;		//日：[1 - 31]
} st_ymd_t;

//年月
typedef struct {
	u8 year;	//年：[0 - 255]自从2000年以来的年
	u8 mon;		//月：[1 - 12]
} st_ym_t;

/*************************************************
  API
*************************************************/
/******************************************************************************
*	函数:	systime_init
*	功能:	系统时间模块初始化
*	参数:
*	返回:	0				-	成功
 			-ERR_SYS		-	系统错误
			-ERR_BUSY		- 	模块已初始化
			-ERR_INVAL		-	参数错误
			-ERR_NODEV		-	无此设备
*	说明:	此函数由framework_init调用。
 ******************************************************************************/
int systime_init (void);

/******************************************************************************
*	函数:	systime_get
*	功能:	读取系统时间
*	参数:	time			-	时间（数据传出）
*	返回:	0				-	成功
 			-ERR_SYS		-	系统错误
*	说明:
 ******************************************************************************/
int systime_get (st_ymdhmsw_t *time);

/******************************************************************************
*	函数:	systime_set
*	功能:	设置系统时间
*	参数:	time			-	时间（数据传入）
*	返回:	0				-	成功
 			-ERR_SYS		-	系统错误
			-ERR_INVAL		-	参数错误
*	说明:
 ******************************************************************************/
int systime_set (st_ymdhmsw_t *time);

/******************************************************************************
*	函数:	systime_register_period
*	功能:	注册周期性定时消息
*	参数:	obj				-	业务模块对象指针
			type			-	周期类型（秒、分、日...）
			period			-	周期
*	返回:	>=0				-	时间消息句柄
 			-ERR_SYS		-	系统错误
			-ERR_INVAL		-	参数错误
			-ERR_NOMEM		-	无可用注册空间
*	说明:
 ******************************************************************************/
int systime_register_period (struct BASE *obj, u8 type, u8 period);

/******************************************************************************
*	函数:	systime_register_clock
*	功能:	注册时间到达消息
*	参数:	obj				-	业务模块对象指针
			time			-	到达时间（数据传入）
*	返回:	>=0				-	时间消息句柄
 			-ERR_SYS		-	系统错误
			-ERR_INVAL		-	参数错误
			-ERR_NOMEM		-	无可用注册空间
*	说明:
 ******************************************************************************/
int systime_register_clock (struct BASE *obj, st_ymdhms_t *time);

/******************************************************************************
*	函数:	systime_register_timer
*	功能:	注册倒计时到达消息
*	参数:	obj				-	业务模块对象指针
			sec				-	倒计时到达秒数
			num				-	倒计时次数（0xff表示无限次）
*	返回:	>=0				-	时间消息句柄
 			-ERR_SYS		-	系统错误
			-ERR_INVAL		-	参数错误
			-ERR_NOMEM		-	无可用注册空间
*	说明:
 ******************************************************************************/
int systime_register_timer (struct BASE *obj, u32 sec, u8 num);

/******************************************************************************
*	函数:	systime_unregister
*	功能:	取消时间消息注册
*	参数:	handle			-	时间消息句柄
*	返回:	0				-	成功
 			-ERR_SYS		-	系统错误
*	说明:
 ******************************************************************************/
int systime_unregister (int handle);



#endif
